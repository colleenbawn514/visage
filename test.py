
from PIL import Image, ImageEnhance
import telebot
import os
import time
import traceback
from keyboa import keyboa_maker
from visage import ApplyMakeup
#from visage import flag

makeup = ApplyMakeup()

#—á—Ç–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞ ( –¥–ª—è —Ñ–æ—Ç–æ–∫)
def read_file(file_name):
    with open(file_name, 'r') as file:
        return file.read()

#–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É –ø–æ —Ç–æ–∫–µ–Ω—É
bot = telebot.TeleBot(read_file('token.ini').strip())
#–¥–ª—è —Ñ–æ—Ç–æ
user = dict()

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    chat_id = call.message.chat.id

    if chat_id not in user:
        bot.send_message(chat_id, '–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–∑–æ—Ä–≤–∞–Ω–æ, –Ω–∞–ø–∏—à–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏')
        return
    
    elif call.data == 'lipcstik_r255_g0_b0':
        user[chat_id]['lipstick_color'] = { 'r': 255, 'g': 0 , 'b': 0 }
        user[chat_id]['use_lipstick'] = True    
        bot.edit_message_text('–¶–≤–µ—Ç –≥—É–±: –∫—Ä–∞—Å–Ω—ã–π', chat_id, call.message.id)
        choose_liner(chat_id)

    elif call.data == 'lipcstik_r138_g14_b34':
        user[chat_id]['lipstick_color'] = { 'r': 138, 'g': 14 , 'b': 34 }
        user[chat_id]['use_lipstick'] = True    
        bot.edit_message_text('–¶–≤–µ—Ç –≥—É–±: –±–æ—Ä–¥–æ–≤—ã–π', chat_id, call.message.id)
        choose_liner(chat_id)

    elif call.data == 'lipcstik_r227_g14_b110':
        user[chat_id]['lipstick_color'] = { 'r': 227, 'g': 14 , 'b': 110 }
        user[chat_id]['use_lipstick'] = True    
        bot.edit_message_text('–¶–≤–µ—Ç –≥—É–±: —Ä–æ–∑–æ–≤—ã–π', chat_id, call.message.id)
        choose_liner(chat_id)

    elif call.data == 'lipcstik_r117_g39_b31':
        user[chat_id]['lipstick_color'] = { 'r': 117, 'g': 39 , 'b': 31 }
        user[chat_id]['use_lipstick'] = True    
        bot.edit_message_text('–¶–≤–µ—Ç –≥—É–±: —Ç–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π', chat_id, call.message.id)
        choose_liner(chat_id)

    elif call.data == 'lipcstik_r255_g20_b147':
        user[chat_id]['lipstick_color'] = { 'r': 255, 'g': 20 , 'b': 147 }
        user[chat_id]['use_lipstick'] = True    
        bot.edit_message_text('–¶–≤–µ—Ç –≥—É–±: —è—Ä–∫–æ-—Ä–æ–∑–æ–≤—ã–π', chat_id, call.message.id)
        choose_liner(chat_id)
        
    elif call.data == 'lipcstik_r255_g99_b71':
        user[chat_id]['lipstick_color'] = { 'r': 255, 'g': 99 , 'b': 71 }
        user[chat_id]['use_lipstick'] = True    
        bot.edit_message_text('–¶–≤–µ—Ç –≥—É–±: —Ç–æ–º–∞—Ç–Ω—ã–π', chat_id, call.message.id)
        choose_liner(chat_id)

    elif call.data == 'lipcstik_r75_g0_b130':
        user[chat_id]['lipstick_color'] = { 'r': 75, 'g': 0 , 'b': 130 }
        user[chat_id]['use_lipstick'] = True    
        bot.edit_message_text('–¶–≤–µ—Ç –≥—É–±: –∏–Ω–¥–∏–≥–æ', chat_id, call.message.id)
        choose_liner(chat_id)
        
    elif call.data == 'lipstick_off':
        user[chat_id]['lipstick_color'] = None
        user[chat_id]['use_lipstick'] = False  
        bot.edit_message_text('–ë–µ–∑ –≥—É–±–Ω–æ–π –ø–æ–º–∞–¥—ã', chat_id, call.message.id)
        choose_liner(chat_id) 
       
    elif call.data == 'liner_on':
        user[chat_id]['use_liner'] = True  
        bot.edit_message_text('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∞–π–Ω–µ—Ä', chat_id, call.message.id)
        choose_blush(chat_id) 

    elif call.data == 'liner_off':
        user[chat_id]['use_liner'] = False  
        bot.edit_message_text('–ë–µ–∑ –ª–∞–π–Ω–µ—Ä–∞', chat_id, call.message.id)
        choose_blush(chat_id) 

    elif call.data == 'blush_r162_g59_b108':
        user[chat_id]['blush_color'] = { 'r': 162, 'g': 59 , 'b': 108 }
        user[chat_id]['use_blush'] = True    
        bot.edit_message_text('–¶–≤–µ—Ç —Ä—É–º—è–Ω: —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π', chat_id, call.message.id)
        processing(chat_id)
    
    elif call.data == 'blush_r250_g218_b221':
        user[chat_id]['blush_color'] = { 'r': 250, 'g': 218 , 'b': 221 }
        user[chat_id]['use_blush'] = True    
        bot.edit_message_text('–¶–≤–µ—Ç —Ä—É–º—è–Ω: —Ä–æ–∑–æ–≤—ã–π', chat_id, call.message.id)
        processing(chat_id)
        
    elif call.data == 'blush_r205_g92_b92':
        user[chat_id]['blush_color'] = { 'r': 205, 'g': 92 , 'b': 92 }
        user[chat_id]['use_blush'] = True    
        bot.edit_message_text('–¶–≤–µ—Ç —Ä—É–º—è–Ω: –∫—Ä–∞—Å–Ω—ã–π', chat_id, call.message.id)
        processing(chat_id)
        
    elif call.data == 'blush_r150_g75_b0':
        user[chat_id]['blush_color'] = { 'r': 150, 'g': 75 , 'b': 0 }
        user[chat_id]['use_blush'] = True    
        bot.edit_message_text('–¶–≤–µ—Ç —Ä—É–º—è–Ω: –∫–æ—Ä–∏—á–Ω–µ–≤—ã–π', chat_id, call.message.id)
        processing(chat_id)

    elif call.data == 'blush_off':
        user[chat_id]['blush_color'] = None
        user[chat_id]['use_blush'] = False   
        bot.edit_message_text('–ë–µ–∑ —Ä—É–º—è–Ω', chat_id, call.message.id)
        processing(chat_id)

    elif call.data == 'add_photo':
        bot.edit_message_text('–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â—ë —Ñ–æ—Ç–æ', chat_id, call.message.id)
        bot.register_next_step_handler(call.message, handle_docs_photo)
    elif call.data == 'start_makeup':
        bot.clear_step_handler(call.message)
        bot.delete_message(chat_id, call.message.id)
        choose_lipstik(chat_id)
        

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def start(message):
    if message.text == '/start':
        bot.send_message(
            message.from_user.id, 
            '–ü—Ä–∏–≤–µ—Ç. –≠—Ç–æ –±–æ—Ç –¥–ª—è –Ω–∞–Ω–µ—Å–µ–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –º–∞–∫–∏—è–∂–∞.\n' 
            + '–ù–∞–ø–∏—à–∏ /go, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É.\n' 
            + '–ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.'
        )
    elif message.text == '/inst':
        bot.send_message(
            message.from_user.id, 
            '–î–ª—è –Ω–∞–Ω–µ—Å–µ–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –º–∞–∫–∏—è–∂–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å /go –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –ª–∏—Ü–∞.\n' 
            + '–õ–∏—Ü–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ö–æ—Ä–æ—à–æ –æ—Å–≤–µ—â–µ–Ω–æ –Ω–∞ —Ñ–æ—Ç–æ.\n' 
            + '–î–ª—è –Ω–∞–∏–ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞ —Ñ–æ—Ç–æ –¥–æ–ª–∂–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≥—Ä–∏–º–∞—Å—ã, –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ª–∏—Ü–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–º.\n' 
            + '–ï—Å–ª–∏ –ª–∏—Ü–æ –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –±–æ—Ç –≤—ã–¥–∞—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.\n'
        )
        bot.send_message(
            message.from_user.id, 
            '–ë–æ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –ø–æ 2 –∑–∞ —Ä–∞–∑. –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Ñ–æ—Ç–æ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª, '
            + '–≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å.\n' 
            + '–ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏—Å—å –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–≤—Ç–æ—Ä—É –≤ —Ä–∞–∑–¥–µ–ª–µ /author.'
        )
    elif message.text == '/help':
        bot.send_message(
            message.from_user.id, 
            '/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n' 
            + '/go - –ù–∞–ª–æ–∂–µ–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –º–∞–∫–∏—è–∂–∞.\n' 
            + '/inst - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.\n' 
            + '/author - –°–≤—è–∑—å —Å –∞–≤—Ç–æ—Ä–æ–º.'
        )
    elif message.text == '/author':
        bot.send_message(
            message.from_user.id, 
            '–ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏—Å—å –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–≤—Ç–æ—Ä—É –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º: @Chancellore.'
        )
    elif message.text == '/go':
        user[message.chat.id] = {
            'source_images': [],
            'result_images': [],
            'photo_messages': [],
            'use_lipstick': False,
            'use_liner': False,
            'use_blush': False,
            'lipstick_color': None,
            'blush_color': None,
        }
        bot.send_message(
            message.from_user.id, 
            '–î–ª—è –Ω–∞–Ω–µ—Å–µ–Ω–∏–∏ –∫–æ—Å–º–µ—Ç–∏–∫–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –ª–∏—Ü–∞.\n' 
            + '–õ–∏—Ü–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ö–æ—Ä–æ—à–æ –æ—Å–≤–µ—â–µ–Ω–æ –Ω–∞ —Ñ–æ—Ç–æ.\n' 
            + '–î–ª—è –Ω–∞–∏–ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞ —Ñ–æ—Ç–æ –¥–æ–ª–∂–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≥—Ä–∏–º–∞—Å—ã, –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ª–∏—Ü–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–º.'
        )
        bot.register_next_step_handler(message, handle_docs_photo)
    else:
        bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏—Ç–µ /go –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.\n' + '–ù–∞–ø–∏—à–∏—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.')

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
def handle_docs_photo(message):
    chat_id = message.chat.id    
    processing_info_message = None

    try:
        file_info = bot.get_file(message.photo[-1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        
        src = '/home/ekaterina/visage/' + file_info.file_path
        
        processing_info_message = bot.send_message(
            chat_id,
            "–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ..."
        )
        
        with open(src, 'wb') as new_file:
           new_file.write(downloaded_file)
        
        if check_photo(src) is False:
            bot.delete_message(chat_id, processing_info_message.id)
            actions_with_ids = []        
            if len(user[chat_id]['source_images']) > 0:
                actions_with_ids.append({"üíÖ –°–¥–µ–ª–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ": "start_makeup"})
            kb_actions = keyboa_maker(items=actions_with_ids)
            bot.send_message(
                chat_id,
                reply_markup = kb_actions,
                text = '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ª–∏—Ü–∞ –Ω–∞ —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é'
            )
            bot.register_next_step_handler(message, handle_docs_photo)
            return           
        
        kb_actions = keyboa_maker(items=[{"üíÖ –°–¥–µ–ª–∞—Ç—å –∫—Ä–∞—Å–∏–≤–æ": "start_makeup"}])
        bot.delete_message(chat_id, processing_info_message.id)
        bot.send_message(
            chat_id,
            reply_markup = kb_actions,
            text = '–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ'
        )
        user[chat_id]['source_images'].append(src)
        user[chat_id]['photo_messages'].append(message)
        
        # reply_img = photo_processing(src)
        # images[str(message.chat.id)].append(reply_img)
        # bot.send_photo(message.chat.id, open(reply_img, 'rb'))
    except Exception as e:
        traceback.print_exc()
        if processing_info_message is not None:
            bot.delete_message(chat_id, processing_info_message.id)
        actions_with_ids = []        
        if len(user[chat_id]['source_images']) > 0:
            actions_with_ids.append({"üíÖ –°–¥–µ–ª–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ": "start_makeup"})
        kb_actions = keyboa_maker(items=actions_with_ids)
        bot.send_message(
            chat_id,
            reply_markup = kb_actions,
            text = '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ç–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ'
        )
        
    bot.register_next_step_handler(message, handle_docs_photo)

def choose_lipstik(chat_id):
    lipstik_colors_with_ids = [
        {"–ö—Ä–∞—Å–Ω—ã–π": "lipcstik_r255_g0_b0"},
        {"–ë–æ—Ä–¥–æ–≤—ã–π": "lipcstik_r138_g14_b34"},
        {"–†–æ–∑–æ–≤—ã–π": "lipcstik_r227_g14_b110"},
        {"–¢–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π": "lipcstik_r117_g39_b31"},
        {"–Ø—Ä–∫–æ-—Ä–æ–∑–æ–≤—ã–π": "lipcstik_r255_g20_b147"},
        {"–¢–æ–º–∞—Ç–Ω—ã–π": "lipcstik_r255_g99_b71"},
        {"–ò–Ω–¥–∏–≥–æ": "lipcstik_r75_g0_b130"},  
                         
        {"–ë–µ–∑ –ø–æ–º–∞–¥—ã": "lipstick_off"},
    ]
    
    kb_lipstick_colors = keyboa_maker(items=lipstik_colors_with_ids, items_in_row=3)

    bot.send_message(
        chat_id,
        reply_markup = kb_lipstick_colors,
        text = '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç –≥—É–±:'
    )

def choose_blush(chat_id):
    blush_colors_with_ids = [
        {"–§–∏–æ–ª–µ—Ç–æ–≤—ã–π": "blush_r162_g59_b108"},
        {"–†–æ–∑–æ–≤—ã–π": "blush_r250_g218_b221"},
        {"–ö—Ä–∞—Å–Ω—ã–π": "blush_r205_g92_b92"},
        {"–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π": "blush_r150_g75_b0"},
                         
        {"–ë–µ–∑ —Ä—É–º—è–Ω": "blush_off"},
    ]
    
    kb_blush_colors = keyboa_maker(items=blush_colors_with_ids, items_in_row=2)

    bot.send_message(
        chat_id,
        reply_markup = kb_blush_colors,
        text = '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç —Ä—É–º—è–Ω:'
    )

def choose_liner(chat_id):
    liner_with_ids = [
        {"–î–∞": "liner_on"},
        {"–ù–µ—Ç": "liner_off"},
    ]
    
    kb_liner = keyboa_maker(items=liner_with_ids, items_in_row=2)

    bot.send_message(
        chat_id,
        reply_markup = kb_liner,
        text = '–ù—É–∂–Ω–∞ –ø–æ–¥–≤–æ–¥–∫–∞?'
    )
    
def processing(chat_id):
    bot.send_message(chat_id, '–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –∫–∞–∫–æ–µ —Ç–æ –≤—Ä–µ–º—è')
    
    for i in range(len(user[chat_id]['source_images'])):
        try:
            result_src = photo_processing(user[chat_id]['source_images'][i], user[chat_id])
            print(result_src)
            user[chat_id]['result_images'].append(result_src)
            photo = open(result_src, 'rb')
            bot.send_photo(chat_id, photo)
        except Exception as e:
            traceback.print_exc()
            bot.reply_to(user[chat_id]['photo_messages'][i], '–ù–µ –Ω–∞—à–ª–∏ —Ç—É—Ç –ª–∏—Ü–æ')
            
    bot.send_message(chat_id, '–í—Å–µ —Ñ–æ—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã, –≤—ã —Ç–∞–∫ –ø—Ä–µ–∫—Ä–∞—Å—ã ü•∞. –ù–∞–ø–∏—à–∏—Ç–µ /go —á—Ç–æ –±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –µ—â—ë —Ñ–æ—Ç–æ')
    clear_content(chat_id)
    
def check_photo(image_path):
    photo = Image.open(image_path)
    #photo = open(image_path, 'rb')
    list_points = makeup.get_face_data(image_path, 'FILE_READ') 
    return list_points is not None
    
#–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
def photo_processing(image_path, options):
    result_src = image_path
    
    if options['use_lipstick']:
        result_src = makeup.apply_lipstick(
            result_src,
            options['lipstick_color']['r'],
            options['lipstick_color']['g'],
            options['lipstick_color']['b'],
        )
    if options['use_liner']:
        result_src = makeup.apply_liner(result_src)
    if options['use_blush']:
        result_src = makeup.apply_blush(
            result_src,
            options['blush_color']['r'],
            options['blush_color']['g'],
            options['blush_color']['b'],
        )
    return result_src

#–æ—á–∏—â–µ–Ω–∏–µ –ø–∞–ø–∫–∏ —Å —Ñ–æ—Ç–æ
def clear_content(chat_id):
    try:
        for img in user[chat_id]['source_images']:
            os.remove(img)
        for img in user[chat_id]['result_images']:
            os.remove(img)
    except Exception as e:
        time.sleep(3)
        clear_content(chat_id)
    del user[chat_id]


#–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.polling(none_stop=True, interval=2)    
